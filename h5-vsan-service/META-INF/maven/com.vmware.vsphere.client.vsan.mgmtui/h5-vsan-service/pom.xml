<?xml version="1.0"?>
<project
      xmlns="http://maven.apache.org/POM/4.0.0"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>com.vmware.vsphere.client.vsan.mgmtui</groupId>
      <artifactId>h5-modules</artifactId>
      <version>6.0.0.0-SNAPSHOT</version>
   </parent>

   <artifactId>h5-vsan-service</artifactId>
   <packaging>jar</packaging>

   <dependencies>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
         <version>${spring.version}</version>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-web</artifactId>
         <version>${spring.version}</version>
      </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-webmvc</artifactId>
           <version>${spring.version}</version>
       </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-beans</artifactId>
         <version>${spring.version}</version>
      </dependency>
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-core</artifactId>
         <version>${spring.version}</version>
      </dependency>
       <dependency>
           <groupId>org.springframework</groupId>
           <artifactId>spring-aop</artifactId>
           <version>${spring.version}</version>
       </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${slf4j.version}</version>
      </dependency>
      <dependency>
         <groupId>com.google.code.gson</groupId>
         <artifactId>gson</artifactId>
         <version>${gson.version}</version>
      </dependency>
      <dependency>
         <groupId>com.google.guava</groupId>
         <artifactId>guava</artifactId>
         <version>${guava.version}</version>
      </dependency>
      <dependency>
         <groupId>org.json</groupId>
         <artifactId>org.json</artifactId>
         <version>${json.version}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.httpcomponents</groupId>
         <artifactId>httpclient</artifactId>
         <version>${httpcomponents.httpclient.version}</version>
      </dependency>
      <dependency>
         <groupId>org.apache.httpcomponents</groupId>
         <artifactId>httpmime</artifactId>
         <version>${httpcomponents.httpclient.version}</version>
      </dependency>
      <dependency>
         <groupId>commons-fileupload</groupId>
         <artifactId>commons-fileupload</artifactId>
         <version>${commons.fileupload.version}</version>
      </dependency>
      <dependency>
         <groupId>commons-net</groupId>
         <artifactId>commons-net</artifactId>
         <version>${commons.net.version}</version>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-collections4</artifactId>
         <version>${commons.collections4.version}</version>
         <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
         <version>${javax-servlet.version}</version>
      </dependency>
      <dependency>
         <groupId>commons-logging</groupId>
         <artifactId>commons-logging</artifactId>
         <version>${commons.logging.version}</version>
      </dependency>
      <dependency>
         <groupId>com.fasterxml.jackson.core</groupId>
         <artifactId>jackson-databind</artifactId>
         <version>${jackson.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>vsphere-h5client-sdk</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>proxygen-ts</artifactId>
         <version>${project.version}</version>
         <scope>compile</scope>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>lookupservice-bindings-client</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>wstClient</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>samltoken</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>sso-adminserver-client-bindings</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>authentication-framework</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>authentication-framework-jna</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>authentication-framework-platform</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>install-vimbase-vmodl</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>vlsi-core</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>vlsi-client</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>install-spbm-vmodl</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>vsan-vmodl</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>vmodl2-appliance</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>vmodl2-namespaces</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>vapiRuntime</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>${project.groupId}</groupId>
         <artifactId>featureStateSwitch</artifactId>
         <version>${project.version}</version>
      </dependency>
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-lang3</artifactId>
         <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
         <groupId>org.projectlombok</groupId>
         <artifactId>lombok</artifactId>
         <version>1.18.12</version>
         <scope>provided</scope>
      </dependency>

      <!--Test dependencies-->
      <dependency>
         <groupId>org.powermock</groupId>
         <artifactId>powermock-module-junit4</artifactId>
         <version>${powermock.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.powermock</groupId>
         <artifactId>powermock-api-mockito2</artifactId>
         <version>${powermock.version}</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <profiles>
      <profile>
         <id>code-coverage</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.jacoco</groupId>
                  <artifactId>jacoco-maven-plugin</artifactId>
                  <configuration>
                     <destFile>${project.build.directory}/jacoco.exec</destFile>
                     <append>true</append>
                  </configuration>
                  <executions>
                     <!--Prepares the property pointing to the JaCoCo runtime agent which
                         is passed as VM argument when Maven the Surefire plugin is executed.-->
                     <execution>
                        <id>pre-unit-test</id>
                        <phase>initialize</phase>
                        <goals>
                           <goal>prepare-agent</goal>
                        </goals>
                     </execution>
                     <!--Publishes JaCoCo report to the destFile -->
                     <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                           <goal>report</goal>
                        </goals>
                        <configuration>
                           <!--Sets the output directory for the code coverage report-->
                           <outputDirectory>${project.build.directory}/jacoco-reports</outputDirectory>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
   </profiles>

   <build>
      <plugins>
         <!-- Generate MANIFEST.MF -->
         <plugin>
            <groupId>com.springsource.bundlor</groupId>
            <artifactId>com.springsource.bundlor.maven</artifactId>
            <configuration>
               <manifestTemplatePath>${basedir}/src/main/resources/META-INF/template.mf</manifestTemplatePath>
               <outputPath>${project.build.directory}/classes</outputPath>
            </configuration>
            <executions>
               <execution>
                  <id>bundlor</id>
                  <goals>
                     <goal>bundlor</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <!-- Locate MANIFEST.MF -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
               <archive>
                  <manifestFile>${project.build.directory}/classes/META-INF/MANIFEST.MF</manifestFile>
               </archive>
            </configuration>
         </plugin>

         <!-- j2ts tool setup -->
         <plugin>
            <groupId>org.bsc.maven</groupId>
            <artifactId>maven-processor-plugin</artifactId>
            <configuration>
               <optionMap>DataAccessService
                  <generatedSrcDir>${project.basedir}/../h5-vsan-ui/src/app</generatedSrcDir>
                  <managedObjectClass>@service/managed-object:ManagedObject</managedObjectClass>
                  <serviceInvoker>@service/data-access.service:DataAccessService.invokeService(%1$s, %2$s, %3$s, %4$s)
                  </serviceInvoker>
                  <serviceInvokerObservable>@service/data-access.service:DataAccessService.invokeServiceObservable(%1$s,
                     %2$s, %3$s, %4$s)
                  </serviceInvokerObservable>
                  <moduleName>VsanH5ServiceModule</moduleName>
               </optionMap>
               <processors>
                  <processor>com.vmware.proxygen.ts.TsProcessor</processor>
               </processors>
            </configuration>
            <executions>
               <execution>
                  <id>process</id>
                  <goals>
                     <goal>process</goal>
                  </goals>
                  <phase>generate-sources</phase>
               </execution>
            </executions>
            <dependencies>
               <dependency>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>proxygen-ts</artifactId>
                  <version>${project.version}</version>
               </dependency>
            </dependencies>
         </plugin>

         <!-- Shade the utils from the commons-net libraries inside the jar as it is not present in the virgo -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <configuration>
               <minimizeJar>true</minimizeJar>
               <keepDependenciesWithProvidedScope>false</keepDependenciesWithProvidedScope>
               <artifactSet>
                  <includes>
                     <include>commons-net:commons-net</include>
                  </includes>
               </artifactSet>
            </configuration>
            <executions>
               <execution>
                  <phase>package</phase>
                  <goals>
                     <goal>shade</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>

         <!--Copy the delivarables to the VIRGO pickup folder-->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
               <execution>
                  <id>virgo-deploy</id>
                  <phase>deploy</phase>
                  <goals>
                     <goal>copy</goal>
                  </goals>
               </execution>
            </executions>
            <configuration>
               <stripVersion>true</stripVersion>
               <artifactItems>
                  <artifactItem>
                     <groupId>${project.groupId}</groupId>
                     <artifactId>${project.artifactId}</artifactId>
                     <version>${project.version}</version>
                     <type>${project.type}</type>
                     <overWrite>true</overWrite>
                     <outputDirectory>${env.VIRGO_DIR}/pickup</outputDirectory>
                  </artifactItem>
               </artifactItems>
            </configuration>
         </plugin>

         <!--Used for java unit test reporting-->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <reportFormat>plain</reportFormat>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
